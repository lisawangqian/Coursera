v<-vector(1,3,4,5)
v<-vector(1:6)
v<-c(1:6)
v
v[1]
id=1:332
id<-c(id)
len(id)
ncol(id)
nrow(id)
id
class(id)
as.character(45)
p<-paste(as.character(45), ".csv")
p
paste?
quit()
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
source('~/Desktop/R programming/Untitled.R')
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "./specdata"
all_files <- list.files(directory)
paths <- paste(directory, "/", all_files, sep="")
if (pollutant == "sulfate") { m <- 2L }
else if (pollutant == "nitrate") { m <- 3L}
else { return "invalid argument "}
means <- numeric(length(id))
for (i in id) {
means <- numeric(l)
for (i in id) {
dataset <- read.csv (paths[i], header=TRUE, sep=",")
means[i] <- mean (dataset[, m], na.rm=TRUE)
}
result <- mean(means)
round (result, 3)
}
id <- 1:16
length(id)
class(length(id))
numeric(length(id))
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "./specdata"
all_files <- list.files(directory)
paths <- paste(directory, "/", all_files, sep="")
if (pollutant == "sulfate") { m <- 2L }
else if (pollutant == "nitrate") { m <- 3L}
else { return "invalid argument" }
l <- length (id)
means <- numeric(l)
for (i in id) {
dataset <- read.csv (paths[i], header=TRUE, sep=",")
means[i] <- mean (dataset[, m], na.rm=TRUE)
}
result <- mean(means)
pollutantmean("specdata", "nitrate", 23) == 1.281
}
l <- length (id)
library(datasets)
data(iris)
?iris
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, Sepal.length], 2, mean)
debug(ls)
ls()
q()
library(datasets)
data(iris)
a <- iris(,$Sepal.Length)
a <- iris(,Sepal.Length)
a <- iris[,Sepal.Length]
a <- iris[,$Sepal.Length]
a <- iris[,"Sepal.Length"]
a
a <- iris[, "Sepal.Length":"Species"]
a<- iris[, "Sepal.Length", (species == virginica)]
a<- iris[, "Sepal.Length", "species"]
a<- iris[, "Sepal.Length"("species" == virginica)]
a<- iris[, "Sepal.Length"["species" == virginica]]
a<- iris[, "Sepal.Length"["species" == "virginica"]]
a
tapply(iris[, "Sepal.Length"["species" == "virginica"]], mean)
library(datasets)
data(mtcars)
library(datasets)
> data(iris)
library(datasets)
data(iris)
s <- split(iris, iris$species)
head(iris)
s <- split(iris, iris$Species)
lapply(s, mean)
lapply(s, colMean)
lapply(s, function(x) colMeans(x[, "Sepal.Length"]))
lapply(s, function(x) mean(x[, "Sepal.Length"]))
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
s <- split(mtcars, mtcars$cyl)
lapply(s, function(x) mean(x[, "hp"]))
209.2143-82.63636
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
setwd("/Users/lisa/Desktop/R programming/rprog-data-ProgAssignment3-data")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses="character")
max_num <- len(dataset$Hospital.Name[dataset$State=="MD"])
state_data <- dataset[dataset[, 7]=="MD", ]
outcome_data <- state_data[, 11]
len <- dim(state_data[!is.na(outcome_data), ])[1]
lne
len
len2 <- dim(!is.na(outcome)_data)[1]
len2 <- dim(!is.na(outcome_data)[1]
)
len
len2
len2 <- dim(!is.na(outcome_data))[1]
len2
help order
help order()
